var ctx = document.getElementById("myChart"),
    myChart,
    tiers  = 10,
    player = [],
    counts = [],
    ranges = [],
    color1 = [];

function coinFilp() {
    return Math.random() > .5;
}

function generateCounts(){
    //define values for bar ranges
    ranges.push(0);
    for(let i = 2; i <= tiers; i++){
        ranges.push((player[player.length - 1] -1) * (i / tiers) | 0);
        //ranges.push(1000 * (i / tiers) | 0);
        counts.push(0);
    }

    for(let i = 0; i < player.length; i++){
        if(player[i] === 0){
            counts[0]++;
        } else {
            for(let j = 0; j < ranges.length - 1; j++){
                if(player[i] > ranges[j] && player[i] < ranges[j + 1]){
                counts[j + 1]++;
                }
            }
        }
    }
}

function init(dlrs, plyrs){
    player = [];
    counts = [];
    ranges = [];
    initChart();

    //give each player money
    for(let i = 0; i < plyrs; i++){
        player.push(dlrs);
    }

    //populate color array for graph
    for(let i = 0; i <= tiers; i++){     
        color1.push('rgba(54, 162, 235, 0.2)');
    }

}

function initChart(){
    myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ranges,
            datasets: [{
                data: counts,
                label: 'Players',
                backgroundColor: color1,
                borderColor: color1,
                borderWidth: 5
            }]
        },
        options: {
            responsive: false,
            labelString: "test",
            
            scales: {
                yAxes: [{
                    scaleLabel: {
                        display: true,
                        labelString: 'Number of People'
                    },
                    ticks: {
                        beginAtZero:true
                    }
                }],
                xAxes: [{
                    scaleLabel: {
                        display: true,
                        labelString: 'Dollars held'
                    },
                    ticks: {
                        beginAtZero:true
                    }
                }]
            }
        }
    });
}

function run(dlrs, plyrs, rnds){
    console.log(dlrs + " " + plyrs + " " + rnds);
    init(dlrs, plyrs);
    startGame(plyrs, rnds);
    console.log(player.sort((a, b) => a - b));
    generateCounts();
    for(let i = 0; i < counts.length; i++){
        myChart.data.datasets[0].data[i] = counts[i];
        myChart.update();  
    }
}

function sim(){
    var players = document.getElementById("players").value,
        dollars = document.getElementById("dollars").value,
        rounds  = document.getElementById("rounds").value;
    
    run(dollars, players, rounds);
    
}

function startGame(plyrs, rnds){

    for(let x = 0; x < rnds; x++){
        console.log("test");
        var rand;

        for(let i = 0; i < plyrs; i++){       
            rand = Math.random() * plyrs | 0;
            while(rand === i){
                rand = Math.random() * plyrs | 0;
            }
            if(!player[i] || !player[rand]){
                continue;
            }

            if(coinFilp()){
                player[i]++;
                player[rand]--;
            } else {
                player[i]--;
                player[rand]++;
            }
            
        }

    }

}

init();
